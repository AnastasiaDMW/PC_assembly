{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\client\\\\src\\\\components\\\\Auth_&_Reg\\\\FormAuthorization.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormAuthorization({\n  onAuth,\n  onClick\n}) {\n  _s();\n  let inputRef = useRef(null);\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isSuccessAuth, setIsSuccessAuth] = useState(false);\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginData(prevUser => ({\n      ...prevUser,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (loginData.password === \"\" || loginData.email === \"\") {\n      setErrorMessage(\"Все поля должны быть заполнены\");\n      return;\n    } else {\n      setErrorMessage('');\n    }\n    const info = \"\";\n    try {\n      const response = await axios.post(\"http://localhost:9090/api/user/login\", {\n        email: loginData.email,\n        password: loginData.password\n      });\n      setIsSuccessAuth(true);\n      info = response.data;\n      console.log(\"Пользователь успешно зарегистрирован: \", response.data);\n      // onRegistrationSuccess();\n    } catch (err) {\n      console.error(\"Ошибка при регистрации пользователя: \", err);\n      setIsSuccessAuth(false);\n    }\n    if (isSuccessAuth) {\n      toast.success(info, {\n        position: \"top-center\"\n      });\n    } else {\n      toast.error(info, {\n        position: \"top-center\"\n      });\n    }\n    setLoginData({\n      email: '',\n      password: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"#\",\n    method: \"post\",\n    className: \"main__form form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      onChange: handleChange,\n      placeholder: \"Email\",\n      className: \"form__login form__userdata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"before\",\n      name: \"password\",\n      onChange: handleChange,\n      type: \"password\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      className: \"form__password form__userdata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"before\",\n      className: \"input-lable\",\n      ref: inputRef,\n      onClick: () => onClick(inputRef)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 114\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      className: \"form__button\",\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n}\n_s(FormAuthorization, \"QWBlbycSr1eqGExIj6mEu3ZDMnk=\", false, function () {\n  return [useNavigate];\n});\n_c = FormAuthorization;\nvar _c;\n$RefreshReg$(_c, \"FormAuthorization\");","map":{"version":3,"names":["useRef","useState","axios","useNavigate","toast","jsxDEV","_jsxDEV","FormAuthorization","onAuth","onClick","_s","inputRef","navigate","errorMessage","setErrorMessage","isSuccessAuth","setIsSuccessAuth","loginData","setLoginData","email","password","handleChange","e","name","value","target","prevUser","handleSubmit","preventDefault","info","response","post","data","console","log","err","error","success","position","action","method","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","ref","style","color","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/client/src/components/Auth_&_Reg/FormAuthorization.js"],"sourcesContent":["import {useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function FormAuthorization({onAuth, onClick}){\r\n  let inputRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [isSuccessAuth, setIsSuccessAuth] = useState(false);\r\n  const [loginData, setLoginData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLoginData(prevUser => ({\r\n        ...prevUser,\r\n        [name]: value\r\n    }));\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (loginData.password === \"\" || loginData.email === \"\") {\r\n        setErrorMessage(\"Все поля должны быть заполнены\");\r\n        return;\r\n    } else {\r\n        setErrorMessage('');\r\n    }\r\n\r\n    const info = \"\"\r\n    try {\r\n        const response = await axios.post(\"http://localhost:9090/api/user/login\", {\r\n            email: loginData.email,\r\n            password: loginData.password,\r\n        });\r\n        setIsSuccessAuth(true);\r\n        info = response.data;\r\n        console.log(\"Пользователь успешно зарегистрирован: \", response.data);\r\n        // onRegistrationSuccess();\r\n    } catch (err) {\r\n        console.error(\"Ошибка при регистрации пользователя: \",err);\r\n        setIsSuccessAuth(false);\r\n    }\r\n\r\n    if (isSuccessAuth) {\r\n      toast.success(info, {\r\n            position: \"top-center\",\r\n        });\r\n    } else {\r\n      toast.error(info, {\r\n        position: \"top-center\",\r\n    });\r\n    }\r\n    setLoginData({\r\n        email: '',\r\n        password: '',\r\n    });\r\n  }\r\n\r\n  return <form action=\"#\" method=\"post\" className=\"main__form form\">\r\n      <input type=\"text\" name=\"email\" onChange={handleChange} placeholder=\"Email\" className=\"form__login form__userdata\"/>\r\n      <input id=\"before\" name=\"password\" onChange={handleChange} type=\"password\" placeholder=\"Пароль\" className=\"form__password form__userdata\"/>\r\n      <label htmlFor=\"before\" className='input-lable' ref = {inputRef} onClick={() => onClick(inputRef)}></label><br/>\r\n      {/* Отображаем сообщение об ошибке, если пароли не совпадают */}\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n    <button onClick={handleSubmit} className=\"form__button\">Войти</button>\r\n  </form>\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}