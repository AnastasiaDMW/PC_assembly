{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\r0dio\\\\WebstormProjects\\\\PC_assembly_software\\\\client\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n// eslint-disable-next-line\n\nimport * as React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Header from \"./components/Header\";\nimport Authorization from \"./components/Auth_&_Reg/Authorization\";\nimport FormRegistration from \"./components/Auth_&_Reg/FormRegistration\";\nimport FormAuthorization from \"./components/Auth_&_Reg/FormAuthorization\";\nimport Profile from \"./components/Profile/Profile\";\nimport Home from \"./components/Main/Home\";\nimport Builds from \"./components/Builds/Builds\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport './modules/scss/header.scss';\nimport './css/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const AuthorizationPage = {\n    titleSignInText: 'Авторизация',\n    titleSignUpText: 'Регистрация',\n    signInText: 'Зарегистрироваться',\n    signUpText: 'Войти',\n    isRegisterPage: false\n  };\n  const [isRegister, setIsRegister] = useState(AuthorizationPage.isRegisterPage);\n  const [userIsAuthorize, setUserIsAuthorize] = useState(false);\n  function auth(value) {\n    setUserIsAuthorize(value);\n  }\n  const navigate = useNavigate();\n  function ChangePages() {\n    setIsRegister(!isRegister);\n    if (!isRegister) {\n      navigate('/auth/register');\n    } else {\n      navigate('/auth/login');\n    }\n  }\n  function handleRegistrationSuccess() {\n    setIsRegister(false);\n  }\n  function showPassword(ref) {\n    const tagId = ref.current.getAttribute('for');\n    const inputPassword = document.getElementById(`${tagId}`);\n    if (inputPassword.type === 'password') inputPassword.type = `text`;else inputPassword.type = 'password';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isBeginPage: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(Profile, {\n          userAuthorize: userIsAuthorize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/auth/\",\n        element: /*#__PURE__*/_jsxDEV(Authorization, {\n          page: AuthorizationPage,\n          valueReg: isRegister,\n          onChangePages: ChangePages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 41\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"login\",\n          element: /*#__PURE__*/_jsxDEV(FormAuthorization, {\n            onAuth: auth,\n            onClick: showPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"register\",\n          element: /*#__PURE__*/_jsxDEV(FormRegistration, {\n            onClick: showPassword,\n            onRegistrationSuccess: handleRegistrationSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/builds\",\n        element: /*#__PURE__*/_jsxDEV(Builds, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"bD+45frxogRB6lYEZMzKzQMK76E=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Routes","Route","useState","useNavigate","ToastContainer","Header","Authorization","FormRegistration","FormAuthorization","Profile","Home","Builds","jsxDEV","_jsxDEV","App","_s","AuthorizationPage","titleSignInText","titleSignUpText","signInText","signUpText","isRegisterPage","isRegister","setIsRegister","userIsAuthorize","setUserIsAuthorize","auth","value","navigate","ChangePages","handleRegistrationSuccess","showPassword","ref","tagId","current","getAttribute","inputPassword","document","getElementById","type","className","children","isBeginPage","fileName","_jsxFileName","lineNumber","columnNumber","path","element","userAuthorize","page","valueReg","onChangePages","onAuth","onClick","onRegistrationSuccess","_c","$RefreshReg$"],"sources":["C:/Users/r0dio/WebstormProjects/PC_assembly_software/client/src/App.jsx"],"sourcesContent":["// eslint-disable-next-line\r\n\r\nimport * as React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport Header from \"./components/Header\";\r\nimport Authorization from \"./components/Auth_&_Reg/Authorization\";\r\nimport FormRegistration from \"./components/Auth_&_Reg/FormRegistration\";\r\nimport FormAuthorization from \"./components/Auth_&_Reg/FormAuthorization\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Home from \"./components/Main/Home\";\r\nimport Builds from \"./components/Builds/Builds\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport './modules/scss/header.scss';\r\nimport './css/App.css';\r\n\r\n\r\nexport default function App() {\r\n\r\n  const AuthorizationPage = {\r\n    titleSignInText: 'Авторизация',\r\n    titleSignUpText: 'Регистрация',\r\n    signInText: 'Зарегистрироваться',\r\n    signUpText: 'Войти',\r\n    isRegisterPage: false\r\n  }\r\n\r\n  const [isRegister, setIsRegister] = useState(AuthorizationPage.isRegisterPage);\r\n  const [userIsAuthorize, setUserIsAuthorize] = useState(false);\r\n\r\n  function auth(value) {\r\n      setUserIsAuthorize(value);\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n\r\n  function ChangePages() {\r\n    setIsRegister(!isRegister);\r\n    if (!isRegister) {\r\n        navigate('/auth/register');\r\n    } else {\r\n        navigate('/auth/login');\r\n    }\r\n  }\r\n\r\n  function handleRegistrationSuccess() {\r\n      setIsRegister(false);\r\n  }\r\n\r\n  function showPassword(ref){\r\n    const tagId = ref.current.getAttribute('for')\r\n    const inputPassword = document.getElementById(`${tagId}`);\r\n\r\n    if (inputPassword.type === 'password') inputPassword.type = `text`;\r\n    else inputPassword.type = 'password'\r\n  }\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        <Header isBeginPage={true}/>\r\n        <ToastContainer />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/profile\" element={<Profile userAuthorize={userIsAuthorize}/>} />\r\n          <Route path=\"/auth/\" element={<Authorization page={AuthorizationPage} valueReg={isRegister} onChangePages={ChangePages}/>} >\r\n            <Route path=\"login\" element={<FormAuthorization onAuth={auth} onClick={showPassword}/>} />\r\n            <Route path=\"register\" element={<FormRegistration onClick={showPassword} onRegistrationSuccess={handleRegistrationSuccess} />} />\r\n          </Route>\r\n          <Route path=\"/builds\" element={<Builds />} />\r\n        </Routes>\r\n      </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}