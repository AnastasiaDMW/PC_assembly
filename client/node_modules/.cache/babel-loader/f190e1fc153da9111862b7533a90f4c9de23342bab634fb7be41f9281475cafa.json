{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\client\\\\src\\\\components\\\\Auth_&_Reg\\\\FormAuthorization.js\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormAuthorization({\n  onAuth,\n  onClick\n}) {\n  _s();\n  let inputRef = useRef(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loginData, setLoginData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginData(prevUser => ({\n      ...prevUser,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (loginData.password !== \"\" && loginData.email !== \"\") {\n      setErrorMessage(\"Все поля должны быть заполнены\");\n      return;\n    } else {\n      setErrorMessage('');\n    }\n    // onRegistrationSuccess();\n\n    // toast.success(\"Пользователь зарегистрирован\", {\n    //     position: \"top-center\",\n    // });\n\n    // try {\n    //     const response = await axios.post(\"http://localhost:9090/api/user/register\", {\n    //         email: user.email,\n    //         lastname: \"\",\n    //         name: user.login,\n    //         password: user.password,\n    //         phoneNumber: \"\",\n    //         userRole: 1\n    //     });\n    //     console.log(\"Пользователь успешно зарегистрирован: \", response.data);\n    //     // onRegistrationSuccess();\n    // } catch (err) {\n    //     console.error(\"Ошибка при регистрации пользователя: \",err);\n    // }\n\n    // setUser({\n    //     login: '',\n    //     password: '',\n    //     confirmPassword: '',\n    //     email: ''\n    // });\n    // navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"#\",\n    method: \"post\",\n    className: \"main__form form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      onChange: handleChange,\n      placeholder: \"Email\",\n      className: \"form__login form__userdata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"before\",\n      name: \"password\",\n      onChange: handleChange,\n      type: \"password\",\n      placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      className: \"form__password form__userdata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"before\",\n      className: \"input-lable\",\n      ref: inputRef,\n      onClick: () => onClick(inputRef)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"form__button\",\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}\n_s(FormAuthorization, \"COjN4pR9KowFLSA5bmDdGfYDdwE=\");\n_c = FormAuthorization;\nvar _c;\n$RefreshReg$(_c, \"FormAuthorization\");","map":{"version":3,"names":["useRef","useState","jsxDEV","_jsxDEV","FormAuthorization","onAuth","onClick","_s","inputRef","errorMessage","setErrorMessage","loginData","setLoginData","email","password","handleChange","e","name","value","target","prevUser","handleSubmit","preventDefault","action","method","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","ref","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/client/src/components/Auth_&_Reg/FormAuthorization.js"],"sourcesContent":["import {useRef, useState} from \"react\";\r\n\r\nexport default function FormAuthorization({onAuth, onClick}){\r\n  let inputRef = useRef(null);\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [loginData, setLoginData] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  })\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setLoginData(prevUser => ({\r\n        ...prevUser,\r\n        [name]: value\r\n    }));\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (loginData.password !== \"\" && loginData.email !== \"\") {\r\n        setErrorMessage(\"Все поля должны быть заполнены\");\r\n        return;\r\n    } else {\r\n        setErrorMessage('');\r\n    }\r\n    // onRegistrationSuccess();\r\n\r\n    // toast.success(\"Пользователь зарегистрирован\", {\r\n    //     position: \"top-center\",\r\n    // });\r\n\r\n    // try {\r\n    //     const response = await axios.post(\"http://localhost:9090/api/user/register\", {\r\n    //         email: user.email,\r\n    //         lastname: \"\",\r\n    //         name: user.login,\r\n    //         password: user.password,\r\n    //         phoneNumber: \"\",\r\n    //         userRole: 1\r\n    //     });\r\n    //     console.log(\"Пользователь успешно зарегистрирован: \", response.data);\r\n    //     // onRegistrationSuccess();\r\n    // } catch (err) {\r\n    //     console.error(\"Ошибка при регистрации пользователя: \",err);\r\n    // }\r\n\r\n    // setUser({\r\n    //     login: '',\r\n    //     password: '',\r\n    //     confirmPassword: '',\r\n    //     email: ''\r\n    // });\r\n    // navigate(-1);\r\n  }\r\n\r\n  return <form action=\"#\" method=\"post\" className=\"main__form form\">\r\n      <input type=\"text\" name=\"email\" onChange={handleChange} placeholder=\"Email\" className=\"form__login form__userdata\"/>\r\n      <input id=\"before\" name=\"password\" onChange={handleChange} type=\"password\" placeholder=\"Пароль\" className=\"form__password form__userdata\"/>\r\n      <label htmlFor=\"before\" className='input-lable' ref = {inputRef} onClick={() => onClick(inputRef)}></label>\r\n    <button type='submit' className=\"form__button\">Войти</button>\r\n  </form>\r\n}"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,iBAAiBA,CAAC;EAACC,MAAM;EAAEC;AAAO,CAAC,EAAC;EAAAC,EAAA;EAC1D,IAAIC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE3B,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC;IACzCY,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,YAAY,CAACQ,QAAQ,KAAK;MACtB,GAAGA,QAAQ;MACX,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOL,CAAC,IAAK;IAChCA,CAAC,CAACM,cAAc,CAAC,CAAC;IAElB,IAAIX,SAAS,CAACG,QAAQ,KAAK,EAAE,IAAIH,SAAS,CAACE,KAAK,KAAK,EAAE,EAAE;MACrDH,eAAe,CAAC,gCAAgC,CAAC;MACjD;IACJ,CAAC,MAAM;MACHA,eAAe,CAAC,EAAE,CAAC;IACvB;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;EAED,oBAAOP,OAAA;IAAMoB,MAAM,EAAC,GAAG;IAACC,MAAM,EAAC,MAAM;IAACC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC7DvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACV,IAAI,EAAC,OAAO;MAACW,QAAQ,EAAEb,YAAa;MAACc,WAAW,EAAC,OAAO;MAACJ,SAAS,EAAC;IAA4B;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpH9B,OAAA;MAAO+B,EAAE,EAAC,QAAQ;MAACjB,IAAI,EAAC,UAAU;MAACW,QAAQ,EAAEb,YAAa;MAACY,IAAI,EAAC,UAAU;MAACE,WAAW,EAAC,sCAAQ;MAACJ,SAAS,EAAC;IAA+B;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3I9B,OAAA;MAAOgC,OAAO,EAAC,QAAQ;MAACV,SAAS,EAAC,aAAa;MAACW,GAAG,EAAI5B,QAAS;MAACF,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACE,QAAQ;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7G9B,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AACT;AAAC1B,EAAA,CA9DuBH,iBAAiB;AAAAiC,EAAA,GAAjBjC,iBAAiB;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}